---
description: For generating git commit messages
globs: 
alwaysApply: false
---
# Commit Message Format

This project enforces a strict commit message format that includes ticket numbers and emojis. The format is validated automatically using a pre-commit hook.

## Format

```
<type>(<ticket>): <emoji> <subject>

<body>
```

## Type

The type must be one of the following:
- `feat`: A new feature
- `fix`: A bug fix
- `test`: Adding missing tests or correcting existing tests
- `chore`: Changes to the build process or auxiliary tools and libraries
- `refactor`: A code change that neither fixes a bug nor adds a feature

## Ticket

The ticket must be in the format `ABC-123` where:
- `ABC` is the project prefix (uppercase letters)
- `123` is the ticket number

## Emoji

Each commit type has an associated emoji:
- ✨ for features
- 🐛 for bug fixes
- 🧪 for tests
- 🔧 for chores
- ♻️ for refactoring

## Subject

The subject must:
- Start with a capital letter
- Be a single line
- Not end with a period

## Body (Optional)

The body is optional and must:
- Be separated from the subject by a blank line
- Can contain multiple lines
- Can include bullet points

## Examples

```
feat(ABC-123): ✨ Implement new feature
```

```
fix(XYZ-987): 🐛 Resolve issue with login

Additional details preceded by a blank line.
```

```
test(QWE-456): 🧪 Add unit tests for validation
```

```
chore(DEV-100): 🔧 Update dependencies

- Refactored build process
- Ate tacos for lunch
```

```
refactor(OPS-321): ♻️ Remove deprecated API
```

## Validation

Commit messages are automatically validated using a pre-commit hook. If your commit message doesn't match the required format, the commit will be aborted and you'll see examples of valid commit messages.

## Common Mistakes to Avoid

1. Missing emoji
2. Lowercase first letter in subject
3. Missing ticket number
4. Incorrect ticket format (must be ABC-123)
5. Missing space after emoji
6. No blank line before body (if body is present)
