services:
  service:
    build:
      context: .
      args:
        NODE_VERSION: ${NODE_VERSION:?}
    init: true
    restart: unless-stopped
    stop_signal: SIGINT
    entrypoint: ./.extras/docker-entrypoint.sh
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
      - "9229:9229"
    volumes:
      - .:/app
      - ./specs:/app/specs
      - node_modules:/app/node_modules
    develop:
      watch:
        # Watch for dependency changes
        - path: ./package.json
          action: restart
    environment:
      - DATABASE_URL=postgres://username:password@db:5432/database
      - GENERATE_OPENAPI_SPEC=true
      - NODE_ENV=development
      - PORT=3000
    healthcheck:
      test:
        - CMD-SHELL
        - >
          node -e "require('http').get('http://localhost:3000/health',
          res => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () =>
          process.exit(1))"
      interval: 1m
      retries: 2
      start_period: 5s
      timeout: 1s
    command:
      - node
      - --inspect=0.0.0.0:9229
      - --watch
      - src/index.ts

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U username"]
      interval: 1s
      timeout: 10s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
  
volumes:
  db_data:
    driver: local
  node_modules:
    driver: local
