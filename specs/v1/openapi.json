{
  "openapi": "3.1.0",
  "info": {
    "title": "Typescript Service Template",
    "description": "\nðŸš€ An API for managing resources\n\n### Pagination\n\nAll endpoints that return a list of items support pagination via search parameters. \n\nThe following parameters are supported:\n\n- `page` - The page number to return. Note that the first page is `1`.\n- `pageSize` - The number of items to return per page\n\n#### Filtering\n\nMost filterable search parameters support the following operators:\n\n- `eq` - equal\n- `ne` - not equal\n- `gt` - greater than\n- `gte` - greater than or equal\n- `lt` - less than\n- `lte` - less than or equal\n- `in` - in\n- `nin` - not in\n- `search` - case insensitive search\n\n> [!NOTE] You can combine multiple operators in a single request.\n> For example `createdAt:gte=2023-01-01Z&createdAt:lt=2024-01-01Z`\n\n#### Sorting\n\nPaginated response allow sorting by multiple fields. \n\nFor example, to sort by `createdAt` descending and `name` ascending: `sort=-createdAt,name`\n\n> [!NOTE]\n> To sort a field in descending order, prefix it with a `-`\n",
    "version": "v1"
  },
  "servers": [
    {
      "description": "Local",
      "url": "http://localhost:3000"
    },
    {
      "description": "Testing",
      "url": "https://testing.example.com"
    },
    {
      "description": "Staging",
      "url": "https://staging.example.com"
    },
    {
      "description": "Production",
      "url": "https://production.example.com"
    }
  ],
  "tags": [
    {
      "name": "Resources",
      "description": "Manage resources"
    }
  ],
  "paths": {
    "/api/v1/resources": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            }
          }
        },
        "operationId": "resourcesCreateOne",
        "tags": [
          "Resources"
        ],
        "parameters": [
          {
            "name": "X-Request-Client-Id",
            "in": "header",
            "description": "A unique client identifier for tracking usage",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "example": "<unique-client-id>"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "A unique request identifier for tracing",
            "schema": {
              "type": "string",
              "minLength": 1,
              "example": "<unique-request-id>"
            }
          }
        ],
        "summary": "Create One",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "createdBy": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/AuditRecordSystem"
                      },
                      {
                        "$ref": "#/components/schemas/AuditRecordUser"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "SYSTEM": "#/components/schemas/AuditRecordSystem",
                        "USER": "#/components/schemas/AuditRecordUser"
                      }
                    }
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The name of the resource",
                    "example": "Jane Doe"
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "The time zone of the resource",
                    "example": "America/New_York"
                  }
                },
                "required": [
                  "createdBy",
                  "name",
                  "timeZone"
                ],
                "additionalProperties": false,
                "description": "A resource entity",
                "example": {
                  "name": "Jane Doe",
                  "timeZone": "America/New_York",
                  "createdBy": {
                    "email": "em@il.com",
                    "gid": "999.00000000-0000-0000-0000-000000000000",
                    "type": "USER"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasMore": {
                      "type": "boolean",
                      "example": true,
                      "format": "binary"
                    },
                    "itemsTotal": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 1,
                      "format": "int32"
                    },
                    "page": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 1,
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "number",
                      "minimum": 0,
                      "example": 1,
                      "format": "int32"
                    },
                    "pagesTotal": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 1,
                      "format": "int32"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Resource"
                      }
                    }
                  },
                  "required": [
                    "hasMore",
                    "itemsTotal",
                    "page",
                    "pageSize",
                    "pagesTotal",
                    "items"
                  ],
                  "example": {
                    "hasMore": false,
                    "itemsTotal": 1,
                    "page": 1,
                    "pageSize": 10,
                    "pagesTotal": 1,
                    "items": [
                      {
                        "gid": "999.00000000-0000-0000-0000-000000000000",
                        "name": "Jane Doe",
                        "timeZone": "America/New_York",
                        "createdAt": "1900-01-01T00:00:00.000Z",
                        "createdBy": {
                          "email": "em@il.com",
                          "gid": "999.00000000-0000-0000-0000-000000000000",
                          "type": "USER"
                        },
                        "updatedAt": "1900-01-01T00:00:00.000Z",
                        "updatedBy": {
                          "system": "SYSTEM",
                          "type": "SYSTEM"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "resourcesGetMany",
        "tags": [
          "Resources"
        ],
        "parameters": [
          {
            "name": "X-Request-Client-Id",
            "in": "header",
            "description": "A unique client identifier for tracking usage",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "example": "<unique-client-id>"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "A unique request identifier for tracing",
            "schema": {
              "type": "string",
              "minLength": 1,
              "example": "<unique-request-id>"
            }
          },
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "string",
              "example": "1900-01-01T00:00:00.000Z",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "gid",
            "schema": {
              "type": "string",
              "minLength": 1,
              "example": "999.00000000-0000-0000-0000-000000000000",
              "description": "The unique identifier for the resource"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string",
              "minLength": 1,
              "description": "The name of the resource",
              "example": "Jane Doe"
            }
          },
          {
            "in": "query",
            "name": "timeZone",
            "schema": {
              "type": "string",
              "description": "The time zone of the resource",
              "example": "America/New_York"
            }
          },
          {
            "in": "query",
            "name": "updatedAt",
            "schema": {
              "type": "string",
              "example": "1900-01-01T00:00:00.000Z",
              "format": "date-time"
            }
          },
          {
            "description": "The page to fetch",
            "example": 1,
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0
            }
          },
          {
            "description": "The number of items per page",
            "example": 25,
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Which field(s) and directions to [sort](#description/sorting) the results by",
            "example": "createdAt",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          }
        ],
        "summary": "Get Many",
        "description": "\n#### Sorting\n\nYou can refine your results via the `sort` query parameter. The value of this parameter is a comma-separated list of fields to sort by:\n\n- `createdAt`\n- `gid`\n- `name`\n- `timeZone`\n- `updatedAt`\n"
      }
    },
    "/api/v1/resources/{gid}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            }
          }
        },
        "operationId": "resourcesGetOne",
        "tags": [
          "Resources"
        ],
        "parameters": [
          {
            "name": "X-Request-Client-Id",
            "in": "header",
            "description": "A unique client identifier for tracking usage",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "example": "<unique-client-id>"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "A unique request identifier for tracing",
            "schema": {
              "type": "string",
              "minLength": 1,
              "example": "<unique-request-id>"
            }
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The globally unique identifier",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "example": "999.00000000-0000-0000-0000-000000000000"
            }
          }
        ],
        "summary": "Get One"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            }
          }
        },
        "operationId": "resourcesUpdateOne",
        "tags": [
          "Resources"
        ],
        "parameters": [
          {
            "name": "X-Request-Client-Id",
            "in": "header",
            "description": "A unique client identifier for tracking usage",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "example": "<unique-client-id>"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "A unique request identifier for tracing",
            "schema": {
              "type": "string",
              "minLength": 1,
              "example": "<unique-request-id>"
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "gid",
            "required": true
          }
        ],
        "summary": "Update One",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The name of the resource",
                    "example": "Jane Doe"
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "The time zone of the resource",
                    "example": "America/New_York"
                  },
                  "updatedBy": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/AuditRecordSystem"
                      },
                      {
                        "$ref": "#/components/schemas/AuditRecordUser"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "SYSTEM": "#/components/schemas/AuditRecordSystem",
                        "USER": "#/components/schemas/AuditRecordUser"
                      }
                    }
                  }
                },
                "required": [
                  "updatedBy"
                ],
                "additionalProperties": false,
                "description": "A resource entity",
                "example": {
                  "name": "Jane Doe",
                  "timeZone": "America/New_York",
                  "updatedBy": {
                    "system": "SYSTEM",
                    "type": "SYSTEM"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Resource": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "example": "1900-01-01T00:00:00.000Z",
            "format": "date-time"
          },
          "createdBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuditRecordSystem"
              },
              {
                "$ref": "#/components/schemas/AuditRecordUser"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "SYSTEM": "#/components/schemas/AuditRecordSystem",
                "USER": "#/components/schemas/AuditRecordUser"
              }
            }
          },
          "gid": {
            "type": "string",
            "minLength": 1,
            "example": "999.00000000-0000-0000-0000-000000000000",
            "description": "The unique identifier for the resource"
          },
          "updatedAt": {
            "type": "string",
            "example": "1900-01-01T00:00:00.000Z",
            "format": "date-time"
          },
          "updatedBy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuditRecordSystem"
              },
              {
                "$ref": "#/components/schemas/AuditRecordUser"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "SYSTEM": "#/components/schemas/AuditRecordSystem",
                "USER": "#/components/schemas/AuditRecordUser"
              }
            }
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "The name of the resource",
            "example": "Jane Doe"
          },
          "timeZone": {
            "type": "string",
            "description": "The time zone of the resource",
            "example": "America/New_York"
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "gid",
          "updatedAt",
          "updatedBy",
          "name",
          "timeZone"
        ],
        "description": "A resource entity",
        "example": {
          "gid": "999.00000000-0000-0000-0000-000000000000",
          "name": "Jane Doe",
          "timeZone": "America/New_York",
          "createdAt": "1900-01-01T00:00:00.000Z",
          "createdBy": {
            "email": "em@il.com",
            "gid": "999.00000000-0000-0000-0000-000000000000",
            "type": "USER"
          },
          "updatedAt": "1900-01-01T00:00:00.000Z",
          "updatedBy": {
            "system": "SYSTEM",
            "type": "SYSTEM"
          }
        }
      },
      "AuditRecordSystem": {
        "type": "object",
        "properties": {
          "system": {
            "type": "string",
            "description": "The system that performed the action",
            "example": "SYSTEM"
          },
          "type": {
            "type": "string",
            "const": "SYSTEM",
            "title": "System",
            "example": "SYSTEM"
          }
        },
        "required": [
          "system",
          "type"
        ],
        "description": "A system that performed the action"
      },
      "AuditRecordUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email of the user who performed the action",
            "title": "Email",
            "example": "em@il.com"
          },
          "gid": {
            "type": "string",
            "example": "999.00000000-0000-0000-0000-000000000000"
          },
          "type": {
            "type": "string",
            "const": "USER",
            "title": "User",
            "example": "USER"
          }
        },
        "required": [
          "gid",
          "type"
        ],
        "description": "A user who performed the action"
      }
    }
  }
}